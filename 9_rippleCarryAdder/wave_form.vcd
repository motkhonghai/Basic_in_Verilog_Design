$date
	Sat Sep  6 19:44:42 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ripple_carry_adder $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module rca $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 3 ) c [2:0] $end
$scope module fa1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , cout $end
$var wire 1 - sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 cin $end
$var wire 1 1 cout $end
$var wire 1 2 sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var wire 1 6 cout $end
$var wire 1 7 sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : cin $end
$var wire 1 " cout $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0;
0:
09
08
17
06
05
14
03
02
01
00
0/
0.
1-
0,
1+
0*
b0 )
b101 (
b101 '
b0 &
0%
b101 $
b0 #
0"
b101 !
$end
#10
15
11
1;
1:
16
10
02
17
b111 )
1,
b1100 !
b1100 (
0-
1.
13
1%
b110 #
b110 &
#20
00
02
0;
1"
b110 )
0,
b101 !
b101 (
1-
1/
19
0%
b1111 $
b1111 '
#30
12
10
1;
b111 )
1,
b1111 !
b1111 (
1-
1*
18
1%
b1111 #
b1111 &
#40
